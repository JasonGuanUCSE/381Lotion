{"ast":null,"code":"var _jsxFileName = \"/Users/jason/Desktop/ENSF_381/assignment-06-lotion-JasonGuanUCSE/src/App.js\";\nimport \"./index.css\";\nimport Notes from \"./Notes.js\";\nimport Left from \"./Left\";\nimport Right from \"./Right\";\nimport React, { useState } from 'react';\nimport { useEffect, useRef } from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport { BrowserRouter, Routes, Route, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  /* //show no notes\n  const [showNoNotes, setShowNoNotes] = useState(true);\n  \n  //side Bar button toggle\n  const[sideBar, setSideBar] = useState(true);\n   const toggleSideBar = () => {\n    console.log(\"Side Bar Button Clicked\");\n    setSideBar(!sideBar);\n  };\n   //add note function\n  const [notes, setNotes] = useState([]);\n  const [showNoteEditor, setShowNoteEditor] = useState(false);\n   const [currentNote, setCurrentNote] = useState(null);\n   const addNote = () => {\n    console.log(\"Add Note Button Clicked\");\n    setShowNoNotes(false);\n     const newNote = {\n      id: uuidv4(),\n      title: \"Untitled\",\n      content: \"...\",\n      //lastModified: Date.now(),\n    };\n     //add new note to notes array\n    setNotes([...notes, newNote]);\n     //create editor for new node\n    setShowNoteEditor(true);\n     //set the current note\n    setCurrentNote(newNote.id);\n    \n   };\n    //delete note function\n  const deleteNote = () =>{\n    //if no notes, return\n    if(notes.length === 0){\n      return\n    }\n    const lastNoteId = notes[notes.length - 1].id;\n    console.log(\"Delete Button Clicked\");\n    console.log(lastNoteId);\n    //if id of note to delete matches id of note in notes array, delete note\n    setNotes(notes.filter((note) => note.id !== lastNoteId));\n     if(notes.length === 1){\n      setShowNoteEditor(false);\n      setShowNoNotes(true);\n    }\n  }\n  */\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Notes, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this)\n\n  /*<div className=\"App\">\n     <div className = \"Top\">\n      <button onClick={toggleSideBar}>☰</button>\n      <div id = \"title\">\n        <h1>Lotion</h1>\n        <p>Like Notion, but worse.</p>\n      </div>\n      <div></div>\n    </div>\n     <div className = \"Bot\">\n       {sideBar && (\n        <div id=\"Left\">\n          <Left notes={notes} addNote={addNote} showNoNotes={notes.length === 0} />\n        </div>\n      )}\n       <div id = \"Right\">\n          <Right showNoteEditor = {showNoteEditor} ReactQuill={ReactQuill} useState = {useState} \n          deleteNote = {deleteNote} notes = {notes} currentNote={currentNote} showNoNotes={showNoNotes}/>\n      </div>\n    </div>\n   </div>\n         */;\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Notes","Left","Right","React","useState","useEffect","useRef","ReactQuill","v4","uuidv4","BrowserRouter","Routes","Route","Link","jsxDEV","_jsxDEV","App","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jason/Desktop/ENSF_381/assignment-06-lotion-JasonGuanUCSE/src/App.js"],"sourcesContent":["import \"./index.css\";\nimport Notes from \"./Notes.js\";\n\nimport Left from \"./Left\";\nimport Right from \"./Right\";\nimport React, { useState } from 'react';\nimport { useEffect, useRef } from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { BrowserRouter, Routes, Route, Link } from \"react-router-dom\";\n\n\n\n\nfunction App() {\n\n  /* //show no notes\n  const [showNoNotes, setShowNoNotes] = useState(true);\n\n\n\n  //side Bar button toggle\n  const[sideBar, setSideBar] = useState(true);\n\n  const toggleSideBar = () => {\n    console.log(\"Side Bar Button Clicked\");\n    setSideBar(!sideBar);\n  };\n\n  //add note function\n  const [notes, setNotes] = useState([]);\n  const [showNoteEditor, setShowNoteEditor] = useState(false);\n\n  const [currentNote, setCurrentNote] = useState(null);\n\n  const addNote = () => {\n    console.log(\"Add Note Button Clicked\");\n    setShowNoNotes(false);\n\n    const newNote = {\n      id: uuidv4(),\n      title: \"Untitled\",\n      content: \"...\",\n      //lastModified: Date.now(),\n    };\n\n    //add new note to notes array\n    setNotes([...notes, newNote]);\n\n    //create editor for new node\n    setShowNoteEditor(true);\n\n    //set the current note\n    setCurrentNote(newNote.id);\n    \n\n  };\n\n\n  //delete note function\n  const deleteNote = () =>{\n    //if no notes, return\n    if(notes.length === 0){\n      return\n    }\n    const lastNoteId = notes[notes.length - 1].id;\n    console.log(\"Delete Button Clicked\");\n    console.log(lastNoteId);\n    //if id of note to delete matches id of note in notes array, delete note\n    setNotes(notes.filter((note) => note.id !== lastNoteId));\n\n    if(notes.length === 1){\n      setShowNoteEditor(false);\n      setShowNoNotes(true);\n    }\n  }\n  */\n\n\n  return (\n\n    <BrowserRouter>\n    <main>\n      <Routes>\n        <Route path=\"/\" element={<Notes />} />\n      </Routes>\n    </main>\n    </BrowserRouter>\n\n    /*<div className=\"App\">\n\n      <div className = \"Top\">\n        <button onClick={toggleSideBar}>☰</button>\n        <div id = \"title\">\n          <h1>Lotion</h1>\n          <p>Like Notion, but worse.</p>\n        </div>\n        <div></div>\n      </div>\n\n      <div className = \"Bot\">\n\n        {sideBar && (\n          <div id=\"Left\">\n            <Left notes={notes} addNote={addNote} showNoNotes={notes.length === 0} />\n          </div>\n        )}\n\n        <div id = \"Right\">\n            <Right showNoteEditor = {showNoteEditor} ReactQuill={ReactQuill} useState = {useState} \n            deleteNote = {deleteNote} notes = {notes} currentNote={currentNote} showNoNotes={showNoNotes}/>\n        </div>\n      </div>\n\n    </div>\n\n          */\n  );\n}\n\nexport default App;\n\n"],"mappings":";AAAA,OAAO,aAAa;AACpB,OAAOA,KAAK,MAAM,YAAY;AAE9B,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,OAAOC,UAAU,MAAM,aAAa;AACpC,OAAO,iCAAiC;AACxC,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;AAEnC,SAASC,aAAa,EAAEC,MAAM,EAAEC,KAAK,EAAEC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAKtE,SAASC,GAAGA,CAAA,EAAG;EAEb;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAiBE,oBAEED,OAAA,CAACL,aAAa;IAAAO,QAAA,eACdF,OAAA;MAAAE,QAAA,eACEF,OAAA,CAACJ,MAAM;QAAAM,QAAA,eACLF,OAAA,CAACH,KAAK;UAACM,IAAI,EAAC,GAAG;UAACC,OAAO,eAAEJ,OAAA,CAACf,KAAK;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAI;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAC/B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACJ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;;EAGP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WArBI;AA6BJ;AAACC,EAAA,GAxGQR,GAAG;AA0GZ,eAAeA,GAAG;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}