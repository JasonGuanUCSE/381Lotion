{"ast":null,"code":"var _jsxFileName = \"/Users/jason/Desktop/ENSF_381/assignment-06-lotion-JasonGuanUCSE/src/Notes.js\",\n  _s = $RefreshSig$();\nimport \"./index.css\";\nimport Left from \"./Left\";\nimport Right from \"./Right\";\nimport React, { useState } from 'react';\nimport { useEffect, useRef } from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Notes(_ref) {\n  _s();\n  let {\n    status\n  } = _ref;\n  //side Bar button toggle\n  const [sideBar, setSideBar] = useState(true);\n  const toggleSideBar = () => {\n    console.log(\"Side Bar Button Clicked\");\n    setSideBar(!sideBar);\n    2;\n  };\n  if (status === \"noNotes\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"NoteContaine\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Top\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleSideBar,\n          children: \"\\u2630\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"title\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Lotion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Like Notion, but worse.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Bot\",\n        children: [sideBar && /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"Left\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"LeftTop\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Notes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"NotesContainer\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No Notes Yet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"Right\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"empty\",\n            children: \"Select a note, or create a new one\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  }\n\n  //show no notes\n  //const [showNoNotes, setShowNoNotes] = useState(true);\n\n  /*\n  \n    //side Bar button toggle\n    const[sideBar, setSideBar] = useState(true);\n  \n    const toggleSideBar = () => {\n      console.log(\"Side Bar Button Clicked\");\n      setSideBar(!sideBar);\n    };\n  \n    //add note function\n    const [notes, setNotes] = useState([]);\n    const [showNoteEditor, setShowNoteEditor] = useState(false);\n  \n    const [currentNote, setCurrentNote] = useState(null);\n  \n    const addNote = () => {\n      console.log(\"Add Note Button Clicked\");\n      setShowNoNotes(false);\n  \n      const newNote = {\n        id: uuidv4(),\n        title: \"Untitled\",\n        content: \"...\",\n        //lastModified: Date.now(),\n      };\n  \n  \n      //add new note to notes array\n      setNotes([...notes, newNote]);\n  \n      //create editor for new node\n      setShowNoteEditor(true);\n  \n      //set the current note\n      setCurrentNote(newNote.id);\n      \n  \n    };\n  \n  \n    //delete note function\n    const deleteNote = () =>{\n      //if no notes, return\n      if(notes.length === 0){\n        return\n      }\n      const lastNoteId = notes[notes.length - 1].id;\n      console.log(\"Delete Button Clicked\");\n      console.log(lastNoteId);\n      //if id of note to delete matches id of note in notes array, delete note\n      setNotes(notes.filter((note) => note.id !== lastNoteId));\n  \n      if(notes.length === 1){\n        setShowNoteEditor(false);\n        setShowNoNotes(true);\n      }\n    }\n    \n    */\n\n  /*return (\n    \n    /*<div className=\"App\">\n       <div className = \"Top\">\n        <button onClick={toggleSideBar}>☰</button>\n        <div id = \"title\">\n          <h1>Lotion</h1>\n          <p>Like Notion, but worse.</p>\n        </div>\n        <div></div>\n      </div>\n       <div className = \"Bot\">\n         {sideBar && (\n          <div id=\"Left\">\n            <Left notes={notes} addNote={addNote} showNoNotes={notes.length === 0} />\n          </div>\n        )}\n         <div id = \"Right\">\n            <Right showNoteEditor = {showNoteEditor} ReactQuill={ReactQuill} useState = {useState} \n            deleteNote = {deleteNote} notes = {notes} currentNote={currentNote} showNoNotes={showNoNotes}/>\n        </div>\n      </div>\n     </div>\n           \n  ); */\n}\n_s(Notes, \"Y6wnGVpxuANho+G9Ydldq7IATOE=\");\n_c = Notes;\nexport default Notes;\nvar _c;\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"names":["Left","Right","React","useState","useEffect","useRef","ReactQuill","v4","uuidv4","jsxDEV","_jsxDEV","Notes","_ref","_s","status","sideBar","setSideBar","toggleSideBar","console","log","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/Users/jason/Desktop/ENSF_381/assignment-06-lotion-JasonGuanUCSE/src/Notes.js"],"sourcesContent":["import \"./index.css\";\n\nimport Left from \"./Left\";\nimport Right from \"./Right\";\nimport React, { useState } from 'react';\nimport { useEffect, useRef } from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { v4 as uuidv4 } from 'uuid';\n\n\nfunction Notes({status}) {\n\n    //side Bar button toggle\n    const[sideBar, setSideBar] = useState(true);\n    const toggleSideBar = () => {\n        console.log(\"Side Bar Button Clicked\");\n        setSideBar(!sideBar);2\n    };\n\n    if(status === \"noNotes\"){\n        return(\n            <div className=\"NoteContaine\">\n\n                <div className = \"Top\">\n                    <button onClick={toggleSideBar}>☰</button>\n                    <div id = \"title\">\n                        <h1>Lotion</h1>\n                        <p>Like Notion, but worse.</p>\n                    </div>\n                    <div></div>\n                </div>\n\n                <div className = \"Bot\">\n                    {sideBar && (\n                        <div id=\"Left\">\n                            <div className=\"LeftTop\">\n                                <h1>Notes</h1>\n                                <button>+</button>\n                            </div>\n                            <div className=\"NotesContainer\">\n                                <p>No Notes Yet</p>\n                            </div>\n                        </div>\n                    )}\n                    <div id = \"Right\">\n                        <p id = \"empty\">Select a note, or create a new one</p>\n                    </div>\n                </div>\n\n            </div>\n            \n        )\n\n    }\n\n\n  //show no notes\n  //const [showNoNotes, setShowNoNotes] = useState(true);\n\n/*\n\n  //side Bar button toggle\n  const[sideBar, setSideBar] = useState(true);\n\n  const toggleSideBar = () => {\n    console.log(\"Side Bar Button Clicked\");\n    setSideBar(!sideBar);\n  };\n\n  //add note function\n  const [notes, setNotes] = useState([]);\n  const [showNoteEditor, setShowNoteEditor] = useState(false);\n\n  const [currentNote, setCurrentNote] = useState(null);\n\n  const addNote = () => {\n    console.log(\"Add Note Button Clicked\");\n    setShowNoNotes(false);\n\n    const newNote = {\n      id: uuidv4(),\n      title: \"Untitled\",\n      content: \"...\",\n      //lastModified: Date.now(),\n    };\n\n\n    //add new note to notes array\n    setNotes([...notes, newNote]);\n\n    //create editor for new node\n    setShowNoteEditor(true);\n\n    //set the current note\n    setCurrentNote(newNote.id);\n    \n\n  };\n\n\n  //delete note function\n  const deleteNote = () =>{\n    //if no notes, return\n    if(notes.length === 0){\n      return\n    }\n    const lastNoteId = notes[notes.length - 1].id;\n    console.log(\"Delete Button Clicked\");\n    console.log(lastNoteId);\n    //if id of note to delete matches id of note in notes array, delete note\n    setNotes(notes.filter((note) => note.id !== lastNoteId));\n\n    if(notes.length === 1){\n      setShowNoteEditor(false);\n      setShowNoNotes(true);\n    }\n  }\n  \n  */\n\n  /*return (\n\n   \n    /*<div className=\"App\">\n\n      <div className = \"Top\">\n        <button onClick={toggleSideBar}>☰</button>\n        <div id = \"title\">\n          <h1>Lotion</h1>\n          <p>Like Notion, but worse.</p>\n        </div>\n        <div></div>\n      </div>\n\n      <div className = \"Bot\">\n\n        {sideBar && (\n          <div id=\"Left\">\n            <Left notes={notes} addNote={addNote} showNoNotes={notes.length === 0} />\n          </div>\n        )}\n\n        <div id = \"Right\">\n            <Right showNoteEditor = {showNoteEditor} ReactQuill={ReactQuill} useState = {useState} \n            deleteNote = {deleteNote} notes = {notes} currentNote={currentNote} showNoNotes={showNoNotes}/>\n        </div>\n      </div>\n\n    </div>\n\n          \n  ); */\n\n}\n\n\nexport default Notes;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}